---
- name: Update the apt package index
  ansible.builtin.apt:
    update_cache: yes

#Install Java

- name: Install java
  ansible.builtin.apt:
    name: 
      - "{{ java_version }}"
      - wget
    state: present
    update_cache: yes

- name: Verify the Installed Java version
  ansible.builtin.command:
    cmd: java --version
  register: java_version

- name: Display the Installed Java version
  ansible.builtin.debug:
    var: java_version.stdout_lines

#Install Jenkins

- name: Download Jenkins Repository Key
  ansible.builtin.get_url:
    url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
    dest: /usr/share/keyrings/jenkins-keyring.asc

- name: Add Jenkins repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/"
    state: present
    filename: jenkins
  notify: Update the apt package index

- name: Install Jenkins
  ansible.builtin.apt:
    name: jenkins
    state: absent
  register: jenkins_install_result

- name: Jenkins installation errors
  ansible.builtin.fail:
    msg: "Jenkins installation failed. Please check logs and resolve any issues."
  when: jenkins_install_result.failed

- name: Start and enable Jenkins service
  ansible.builtin.service:
    name: jenkins
    state: started
    enabled: yes
  register: jenkins_service_result

- name: Jenkins service start errors
  ansible.builtin.fail:
    msg: "Jenkins service start failed. Please check logs and resolve any issues."
  when: jenkins_service_result.failed

- name: Jenkins status
  ansible.builtin.service:
    name: jenkins
  register: jenkins_status

- name: Display Jenkins status
  ansible.builtin.debug:
    var: jenkins_status.stdout

- name: Get Jenkins password
  ansible.builtin.command:
    cmd: cat /var/lib/jenkins/secrets/initialAdminPassword
  register: jenkins_initial_password

- name: Jenkins password read errors
  ansible.builtin.fail:
    msg: "Failed to read Jenkins initial admin password"
  when: jenkins_initial_password.failed

- name: Display Jenkins password
  ansible.builtin.debug:
    var: jenkins_initial_password.stdout

#Install Docker

- name: Install the dependencies
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
    state: latest

- name: Add the GPG signing key for the Docker repository
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add the Docker APT repository to the sources.list.d directory
  ansible.builtin.apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu jammy stable
    state: present
    filename: docker
  notify: Update the apt package index

- name: Get Docker CE package policy
  ansible.builtin.command:
    cmd: apt-cache policy docker-ce
  register: docker_ce_policy

- name: Display info about docker-ce
  ansible.builtin.debug:
    var: docker_ce_policy.stdout_lines

- name: Install Docker
  ansible.builtin.apt:
    name: docker-ce
    state: latest
  register: docker_install_result

- name: Docker installation errors                              
  ansible.builtin.fail:                                         
    msg: "Docker installation failed. Please check logs and resolve any issues."
  when: docker_install_result.failed

- name: Verify docker status
  ansible.builtin.service:
    name: docker
    state: started
    enabled: yes
  register: docker_service_result

- name: Docker service start errors
  ansible.builtin.fail:
    msg: "Docker service start failed. Please check logs and resolve any issues."
  when:  docker_service_result.failed

- name: Check Docker version
  ansible.builtin.command:
    cmd: docker --version
  register: docker_version

- name: Display Docker version
  ansible.builtin.debug:
    var: docker_version.stdout_lines  

- name: Add user to Docker group
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes
    state: present

- name: Get information about the user's groups
  ansible.builtin.shell: id -nG {{ ansible_user }}
  register: user_groups_info

- name: Display user groups
  ansible.builtin.debug:
    var: user_groups_info.stdout_lines

- name: Verify that user is in the Docker group
  ansible.builtin.debug:
    msg: "User is in the Docker group"
  when: "'docker' in user_groups_info.stdout.split()"
